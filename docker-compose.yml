services:
  eve.api:
    image: ${DOCKER_REGISTRY-}eveapi
    container_name: api
    build:
      context: .
      dockerfile: Eve.Api/Dockerfile
    ports:
      - ${ASPNETCORE_HTTP_PORTS}:${ASPNETCORE_HTTP_PORTS}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - ASPNETCORE_HTTPS_PORTS=6001
      - ConnectionStrings__Database=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      - ConnectionStrings__AuthDatabase=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_AUTH_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      - ConnectionStrings__Redis=redis:6379,Password=${REDIS_PASSWORD}
      - Admin__Name=${ADMIN_NAME}
      - Admin__Password=${ADMIN_PASSWORD}
      - Encryption__SecretKey=${CRYPT_KEY}
      - ESI__ClientId=${CLIENT_ID}
      - ESI__ClientSecret=${CLIENT_SECRET}
      - ESI__AdminState=${ADMIN_STATE} 
      - ESI__UserState=${USER_STATE} 
      - ESI__RedirectUrl=${REDIRECT_URL} 
    depends_on:
      - eve.db
    volumes:
      - shared-data:/app/evesde
  eve.db:
    image: postgres:latest
    container_name: eve.db
    environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: eve.redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} 
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - shared-data:/data
volumes:
  shared-data: 
    driver: local
    driver_opts:
        type: none
        o: bind
        device: "${VOLUME_PATH}"
  postgres-data:  